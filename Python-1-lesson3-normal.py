# coding: utf-8 

import os

# Задание - 1
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь),
# Есть условие, не отображать людей получающих более зарплату 500000, как именно
#  выполнить условие решать вам, можете не писать в файл
# можете не выводить, подумайте какой способ будет наиболее правильным и оптимальным,
#  если скажем эти файлы потом придется передавать.
# Так же при выводе имя должно быть полностью в верхнем регистре!
# Подумайте вспоминая урок, как это можно сделать максимально кратко, используя возможности языка Python.

lst1_name = ["Вася", "Миша", "Саша", "Шеф"]
lst2_pay = [50000, 60000, 75000, 750000]
list_wage = dict (zip ( lst1_name , lst2_pay )) # преобразуем список в словарь
# Принцип работы этой функции проще показать на примерах.
# a = [ 1 , 2]
# b = [ 3 , 4]
# print ( zip ( a , b ))
# Выведет: [(1, 3), (2, 4)]

my_file = open ("salary.txt", "w", encoding='UTF-8')
for key, value in list_wage.items(): # использую метод items() для получения пары «ключ — значение» на каждую итерацию
    if value < 500000:
        my_file.write('{} - {}\n'.format(key, value)) # записывем данные в файл
my_file.close()


# my_file = open ("salary.txt", "r", encoding='UTF-8')
# for line in my_file: 
#     print(line)
# my_file.close()

# Лучше работать с with, преимущество не НУЖНО после ЗАКРЫВАТЬ my_file.close()
with open( "salary.txt" , 'r' , encoding = 'UTF-8' ) as file:
     new_wage = [line.strip() for line in file] # прочитанные данные отправляем в СПИСОК
     #print(new_wage)
     for i in range(len(new_wage)): 
         x = new_wage[i].split(' - ') # делим список по каждому элементу, убираем знак - 
         print(x[0].upper() + " - " + str((int(x[1]) * 0.87))) # выполняем условие задачи с 13%
